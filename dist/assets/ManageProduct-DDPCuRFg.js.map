{"version":3,"file":"ManageProduct-DDPCuRFg.js","sources":["../../src/Pages/ManageProduct/ManageProduct.tsx"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { IInventoryItem } from \"../../types\";\nimport { useState } from \"react\";\n\nconst ManageProduct = () => {\n  const { id } = useParams<{ id: string }>();\n  const queryClient = useQueryClient();\n  const email = localStorage.getItem(\"email\");\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const [restockQuantity, setRestockQuantity] = useState(\"\");\n\n  const { data: product, isLoading } = useQuery<IInventoryItem>({\n    queryKey: [\"manageProduct\", id],\n    queryFn: () =>\n      fetch(`https://stock-world-server.onrender.com/inventory/${id}`, {\n        headers: {\n          Authorization: `${email} ${accessToken}`,\n        },\n      }).then((res) => res.json()),\n    enabled: !!id && !!email && !!accessToken,\n  });\n\n  const updateQuantityMutation = useMutation({\n    mutationFn: (newQuantity: number) => {\n      const url = `https://stock-world-server.onrender.com/inventory/${id}`;\n      return axios.put(\n        url,\n        { quantity: newQuantity },\n        {\n          headers: {\n            Authorization: `${email} ${accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: () => {\n      toast.success(\"Product quantity updated successfully!\");\n      queryClient.invalidateQueries({ queryKey: [\"manageProduct\", id] });\n    },\n    onError: (error: any) => {\n      toast.error(\n        error.response?.data?.message || \"Failed to update product quantity\"\n      );\n    },\n  });\n\n  const handleDelivery = () => {\n    if (product && product.quantity > 0) {\n      updateQuantityMutation.mutate(product.quantity - 1);\n    } else {\n      toast.error(\"Product is out of stock.\");\n    }\n  };\n\n  const handleRestock = (e: React.FormEvent) => {\n    e.preventDefault();\n    const quantity = parseInt(restockQuantity, 10);\n    if (product && quantity > 0) {\n      updateQuantityMutation.mutate(product.quantity + quantity);\n      setRestockQuantity(\"\");\n    } else {\n      toast.error(\"Please enter a valid quantity.\");\n    }\n  };\n\n  if (isLoading) {\n    return <LoadingSpinner message=\"Loading product details...\" />;\n  }\n\n  if (!product) {\n    return <div>Product not found</div>;\n  }\n\n  return (\n    <section className=\"min-h-screen bg-base-200 py-12\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"card lg:card-side bg-base-100 shadow-lg\">\n            <figure className=\"lg:w-1/2\">\n              <img\n                src={product.image}\n                alt={product.name}\n                className=\"object-cover w-full h-full\"\n              />\n            </figure>\n            <div className=\"card-body lg:w-1/2\">\n              <h2 className=\"card-title text-3xl\">{product.name}</h2>\n              <p className=\"text-sm opacity-50\">ID: {product._id}</p>\n              <p>{product.description}</p>\n              <div className=\"flex justify-between items-center my-4\">\n                <p className=\"text-xl font-bold\">Price: ${product.price}</p>\n                <p className=\"text-xl font-bold\">\n                  Quantity: {product.quantity}\n                </p>\n              </div>\n              <div className=\"card-actions justify-end\">\n                <button\n                  onClick={handleDelivery}\n                  className=\"btn btn-primary\"\n                  disabled={updateQuantityMutation.isPending}\n                >\n                  Deliver\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-lg mt-8\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title\">Restock Item</h2>\n              <form onSubmit={handleRestock} className=\"flex gap-4\">\n                <input\n                  type=\"number\"\n                  value={restockQuantity}\n                  onChange={(e) => setRestockQuantity(e.target.value)}\n                  placeholder=\"Enter quantity\"\n                  className=\"input input-bordered w-full\"\n                />\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-secondary\"\n                  disabled={updateQuantityMutation.isPending}\n                >\n                  Restock\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ManageProduct;"],"names":["ManageProduct","id","useParams","queryClient","useQueryClient","email","accessToken","restockQuantity","setRestockQuantity","useState","product","isLoading","useQuery","res","updateQuantityMutation","useMutation","newQuantity","url","axios","toast","error","_b","_a","handleDelivery","handleRestock","e","quantity","jsx","LoadingSpinner","jsxs"],"mappings":"0MAQA,MAAMA,EAAgB,IAAM,CAC1B,KAAM,CAAE,GAAAC,CAAA,EAAOC,EAAA,EACTC,EAAcC,EAAA,EACdC,EAAQ,aAAa,QAAQ,OAAO,EACpCC,EAAc,aAAa,QAAQ,aAAa,EAChD,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAS,EAAE,EAEnD,CAAE,KAAMC,EAAS,UAAAC,CAAA,EAAcC,EAAyB,CAC5D,SAAU,CAAC,gBAAiBX,CAAE,EAC9B,QAAS,IACP,MAAM,qDAAqDA,CAAE,GAAI,CAC/D,QAAS,CACP,cAAe,GAAGI,CAAK,IAAIC,CAAW,EAAA,CACxC,CACD,EAAE,KAAMO,GAAQA,EAAI,MAAM,EAC7B,QAAS,CAAC,CAACZ,GAAM,CAAC,CAACI,GAAS,CAAC,CAACC,CAAA,CAC/B,EAEKQ,EAAyBC,EAAY,CACzC,WAAaC,GAAwB,CACnC,MAAMC,EAAM,qDAAqDhB,CAAE,GACnE,OAAOiB,EAAM,IACXD,EACA,CAAE,SAAUD,CAAA,EACZ,CACE,QAAS,CACP,cAAe,GAAGX,CAAK,IAAIC,CAAW,EAAA,CACxC,CACF,CAEJ,EACA,UAAW,IAAM,CACfa,EAAM,QAAQ,wCAAwC,EACtDhB,EAAY,kBAAkB,CAAE,SAAU,CAAC,gBAAiBF,CAAE,EAAG,CACnE,EACA,QAAUmB,GAAe,SACvBD,EAAM,QACJE,GAAAC,EAAAF,EAAM,WAAN,YAAAE,EAAgB,OAAhB,YAAAD,EAAsB,UAAW,mCAAA,CAErC,CAAA,CACD,EAEKE,EAAiB,IAAM,CACvBb,GAAWA,EAAQ,SAAW,EAChCI,EAAuB,OAAOJ,EAAQ,SAAW,CAAC,EAElDS,EAAM,MAAM,0BAA0B,CAE1C,EAEMK,EAAiBC,GAAuB,CAC5CA,EAAE,eAAA,EACF,MAAMC,EAAW,SAASnB,EAAiB,EAAE,EACzCG,GAAWgB,EAAW,GACxBZ,EAAuB,OAAOJ,EAAQ,SAAWgB,CAAQ,EACzDlB,EAAmB,EAAE,GAErBW,EAAM,MAAM,gCAAgC,CAEhD,EAEA,OAAIR,EACKgB,EAAAA,IAACC,EAAA,CAAe,QAAQ,4BAAA,CAA6B,EAGzDlB,EAKHiB,EAAAA,IAAC,UAAA,CAAQ,UAAU,iCACjB,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yBACb,SAAAE,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0CACb,SAAA,CAAAF,EAAAA,IAAC,SAAA,CAAO,UAAU,WAChB,SAAAA,EAAAA,IAAC,MAAA,CACC,IAAKjB,EAAQ,MACb,IAAKA,EAAQ,KACb,UAAU,4BAAA,CAAA,EAEd,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,sBAAuB,SAAAjB,EAAQ,KAAK,EAClDmB,EAAAA,KAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,CAAA,OAAKnB,EAAQ,GAAA,EAAI,EACnDiB,EAAAA,IAAC,IAAA,CAAG,SAAAjB,EAAQ,WAAA,CAAY,EACxBmB,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,IAAA,CAAE,UAAU,oBAAoB,SAAA,CAAA,WAASnB,EAAQ,KAAA,EAAM,EACxDmB,EAAAA,KAAC,IAAA,CAAE,UAAU,oBAAoB,SAAA,CAAA,aACpBnB,EAAQ,QAAA,CAAA,CACrB,CAAA,EACF,EACAiB,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAAC,SAAA,CACC,QAASJ,EACT,UAAU,kBACV,SAAUT,EAAuB,UAClC,SAAA,SAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,EACF,QAEC,MAAA,CAAI,UAAU,kCACb,SAAAe,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAF,EAAAA,IAAC,KAAA,CAAG,UAAU,aAAa,SAAA,eAAY,EACvCE,EAAAA,KAAC,OAAA,CAAK,SAAUL,EAAe,UAAU,aACvC,SAAA,CAAAG,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOpB,EACP,SAAWkB,GAAMjB,EAAmBiB,EAAE,OAAO,KAAK,EAClD,YAAY,iBACZ,UAAU,6BAAA,CAAA,EAEZE,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,oBACV,SAAUb,EAAuB,UAClC,SAAA,SAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,EA5DOa,EAAAA,IAAC,OAAI,SAAA,mBAAA,CAAiB,CA8DjC"}